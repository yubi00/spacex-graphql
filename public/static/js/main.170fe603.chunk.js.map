{"version":3,"sources":["components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","logo.jpg","components/Header.js","router/AppRouter.js","App.js","index.js"],"names":["LaunchItem","item","className","success","name","date","date_local","format","to","id","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","launches","map","LAUNCH_QUERY","Launch","useParams","variables","launch","flight_number","Header","src","logo","style","width","display","margin","alt","AppRouter","path","exact","component","App","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"sSA2BeA,EAvBI,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpB,OACE,qBAAKC,UAAU,sBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,WAAf,UACE,qBAAIA,UAAWD,EAAKE,QAAU,eAAiB,cAA/C,UACG,IACAF,EAAKG,KAAM,OAEd,4BACE,cAAC,IAAD,CAAQC,KAAMJ,EAAKK,WAAYC,OAAO,gCAG1C,qBAAKL,UAAU,WAAf,SACE,cAAC,IAAD,CAAMM,GAAE,kBAAaP,EAAKQ,IAAMP,UAAU,oBAA1C,oCCHKQ,EAbI,WACjB,OACE,sBAAKR,UAAU,OAAf,UACE,8BACE,sBAAMA,UAAU,0BADlB,cAGA,8BACE,sBAAMA,UAAU,wBADlB,iBCHAS,EAAiBC,cAAH,6JA4BLC,EAhBE,WACf,MAAiCC,mBAASH,GAAlCI,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAExB,OAAIF,EAAgB,mBAAGb,UAAU,cAAb,wBAChBc,EAAc,mBAAGd,UAAU,0BAAb,sBAGhB,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,IACCe,EAAKC,SAASC,KAAI,SAAClB,GAAD,OACjB,cAAC,EAAD,CAA0BA,KAAMA,GAAfA,EAAKQ,WCvBxBW,EAAeR,cAAH,sKA+CHS,EApCA,WACb,IAAQZ,EAAOa,cAAPb,GACR,EAAiCK,mBAASM,EAAc,CACtDG,UAAW,CAAEd,QADPM,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,KAIxB,GAAIF,EAAS,OAAO,mBAAGb,UAAU,cAAb,wBACpB,GAAIc,EAAO,OAAO,mBAAGd,UAAU,0BAAb,sBAElB,MAAqDe,EAAKO,OAAlDpB,EAAR,EAAQA,KAAMqB,EAAd,EAAcA,cAAenB,EAA7B,EAA6BA,WAAYH,EAAzC,EAAyCA,QAEzC,OACE,eAAC,WAAD,WACE,eAAC,IAAD,CAAMK,GAAG,IAAIN,UAAU,oBAAvB,UACG,IADH,OAEO,OAEP,qBAAIA,UAAU,iBAAd,UACE,sBAAMA,UAAU,YAAhB,uBADF,IACgDE,EAAM,OAEtD,qBAAIF,UAAU,aAAd,UACE,qBAAIA,UAAU,4BAAd,4BACkBuB,KAElB,qBAAIvB,UAAU,4BAAd,mBAAiDI,KACjD,qBAAIJ,UAAU,4BAAd,qBACW,IACT,uBAAMA,UAAWC,EAAU,eAAiB,cAA5C,UACGA,EAAU,MAAQ,KAAM,iBC3CtB,MAA0B,iCCe1BuB,EAZA,WACb,OACE,iCACE,qBACEC,IAAKC,EACLC,MAAO,CAAEC,MAAO,IAAKC,QAAS,QAASC,OAAQ,QAC/CC,IAAI,cCSGC,EAZG,WAChB,OACE,cAAC,IAAD,UACE,sBAAKhC,UAAU,YAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOiC,KAAK,IAAIC,OAAK,EAACC,UAAWxB,IACjC,cAAC,IAAD,CAAOsB,KAAK,cAAcE,UAAWhB,UCN9BiB,MAHf,WACE,OAAO,cAAC,EAAD,KCGIC,EAAS,IAAIC,eAAa,CACrCC,IAAK,WACLC,MAAO,IAAIC,kBAGbC,IAASC,OACP,cAAC,iBAAD,CAAgBN,OAAQA,EAAxB,SACE,cAAC,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.170fe603.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst LaunchItem = ({ item }) => {\r\n  return (\r\n    <div className='card card-body mb-3'>\r\n      <div className='row'>\r\n        <div className='col-md-9'>\r\n          <h4 className={item.success ? \"text-success\" : \"text-danger\"}>\r\n            {\" \"}\r\n            {item.name}{\" \"}\r\n          </h4>\r\n          <p>\r\n            <Moment date={item.date_local} format='MMM Do YYYY, h:mm:ss a' />\r\n          </p>\r\n        </div>\r\n        <div className='col-md-3'>\r\n          <Link to={`/launch/${item.id}`} className='btn btn-secondary'>\r\n            Launch Details\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LaunchItem;\r\n","import React from \"react\";\r\n\r\nconst MissionKey = () => {\r\n  return (\r\n    <div className='my-3'>\r\n      <p>\r\n        <span className='px-3 mx-2  bg-success' /> Success\r\n      </p>\r\n      <p>\r\n        <span className='px-3 mx-2 bg-danger' /> Failed\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MissionKey;\r\n","import React from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport LaunchItem from \"./LaunchItem\";\r\nimport MissionKey from \"./MissionKey\";\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query launchesQuery {\r\n    launches {\r\n      id\r\n      flight_number\r\n      name\r\n      date_local\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\nconst Launches = () => {\r\n  const { loading, error, data } = useQuery(LAUNCHES_QUERY);\r\n\r\n  if (loading) return <p className='text-center'>Loading...</p>;\r\n  if (error) return <p className='text-center text-danger'>Error :(</p>;\r\n\r\n  return (\r\n    <div className='mt-2'>\r\n      <MissionKey />\r\n      {data.launches.map((item) => (\r\n        <LaunchItem key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Launches;\r\n","import React, { Fragment } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query launchQuery($id: String!) {\r\n    launch(id: $id) {\r\n      flight_number\r\n      name\r\n      date_local\r\n      success\r\n    }\r\n  }\r\n`;\r\n\r\nconst Launch = () => {\r\n  const { id } = useParams();\r\n  const { loading, error, data } = useQuery(LAUNCH_QUERY, {\r\n    variables: { id }\r\n  });\r\n\r\n  if (loading) return <p className='text-center'>Loading...</p>;\r\n  if (error) return <p className='text-center text-danger'>Error :(</p>;\r\n\r\n  const { name, flight_number, date_local, success } = data.launch;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Link to='/' className='btn btn-secondary'>\r\n        {\" \"}\r\n        Back{\" \"}\r\n      </Link>\r\n      <h1 className='display-4 my-3'>\r\n        <span className='text-dark'>Mission: </span> {name}{\" \"}\r\n      </h1>\r\n      <ul className='list-group'>\r\n        <li className='list-group-item text-dark'>\r\n          Flight Number: {flight_number}\r\n        </li>\r\n        <li className='list-group-item text-dark'>Date: {date_local}</li>\r\n        <li className='list-group-item text-dark'>\r\n          success:{\" \"}\r\n          <span className={success ? \"text-success\" : \"text-danger\"}>\r\n            {success ? \"Yes\" : \"No\"}{\" \"}\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Launch;\r\n","export default __webpack_public_path__ + \"static/media/logo.cf578d34.jpg\";","import React from \"react\";\r\nimport logo from \"../logo.jpg\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <img\r\n        src={logo}\r\n        style={{ width: 300, display: \"block\", margin: \"auto\" }}\r\n        alt='spacex'\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Launches from \"../components/Launches\";\r\nimport Launch from \"../components/Launch\";\r\nimport Header from \"../components/Header\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div className='container'>\r\n        <Header />\r\n        <Route path='/' exact component={Launches} />\r\n        <Route path='/launch/:id' component={Launch} />\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import \"./App.css\";\nimport AppRouter from \"./router/AppRouter\";\n\nfunction App() {\n  return <AppRouter />;\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { ApolloProvider } from \"@apollo/client/react\";\nimport \"./bootstrap.min.css\";\nimport App from \"./App\";\n\nexport const client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache()\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}